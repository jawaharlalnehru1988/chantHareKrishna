import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';

export type LanguageType = 'english' | 'tamil' | 'hindi' | 'telugu' | 'kannada' | 'malayalam' | 'marathi' | 'gujarati' | 'bengali' | 'punjabi' | 'urdu';

export interface LanguageOption {
  key: LanguageType;
  flag: string;
  name: string;
  description: string;
}

export interface AppContent {
  // Menu items
  chantMenuItem: string;
  prabhupadaMenuItem: string;
  howToChantMenuItem: string;
  benefitsMenuItem: string;
  settingsMenuItem: string;
  
  // Quick actions
  quickActionsLabel: string;
  familyLabel: string;
  friendsLabel: string;
  notesLabel: string;
  workLabel: string;
  travelLabel: string;
  remindersLabel: string;
  
  // App header
  appTitle: string;
  appSubtitle: string;
}

export interface LanguageData {
  key: LanguageType;
  flag: string;
  name: string;
  description: string;
  content: AppContent;
}

@Injectable({
  providedIn: 'root'
})
export class LanguageService {
  private currentLanguageSubject = new BehaviorSubject<LanguageType>('english');
  public currentLanguage$ = this.currentLanguageSubject.asObservable();

  // Language data array
  private languageData: LanguageData[] = [
    {
      key: 'english',
      flag: 'ЁЯЗ║ЁЯЗ╕',
      name: 'English',
      description: 'English',
      content: {
        chantMenuItem: 'Chant',
        prabhupadaMenuItem: 'Prabhupada on Chanting',
        howToChantMenuItem: 'How to Chant',
        benefitsMenuItem: 'Benefits of Chanting',
        settingsMenuItem: 'Settings',
        quickActionsLabel: 'Quick Actions',
        familyLabel: 'Family',
        friendsLabel: 'Friends',
        notesLabel: 'Notes',
        workLabel: 'Work',
        travelLabel: 'Travel',
        remindersLabel: 'Reminders',
        appTitle: 'Chanting App',
        appSubtitle: 'Hare Krishna ЁЯЩП'
      }
    },
    {
      key: 'tamil',
      flag: 'ЁЯЗоЁЯЗ│',
      name: 'Tamil',
      description: 'родрооро┐ро┤рпН',
      content: {
        chantMenuItem: 'роЬрокроорпН',
        prabhupadaMenuItem: 'роЬрокродрпНродро┐ро▓рпН рокро┐ро░рокрпБрокро╛родро░рпН',
        howToChantMenuItem: 'роОрокрпНрокроЯро┐ роЬрокро┐рокрпНрокродрпБ',
        benefitsMenuItem: 'роЬрокродрпНродро┐ройрпН рокропройрпНроХро│рпН',
        settingsMenuItem: 'роЕроорпИрокрпНрокрпБроХро│рпН',
        quickActionsLabel: 'ро╡ро┐ро░рпИро╡рпБ роироЯро╡роЯро┐роХрпНроХрпИроХро│рпН',
        familyLabel: 'роХрпБроЯрпБроорпНрокроорпН',
        friendsLabel: 'роирогрпНрокро░рпНроХро│рпН',
        notesLabel: 'роХрпБро▒ро┐рокрпНрокрпБроХро│рпН',
        workLabel: 'ро╡рпЗро▓рпИ',
        travelLabel: 'рокропрогроорпН',
        remindersLabel: 'роиро┐ройрпИро╡рпВроЯрпНроЯро▓рпНроХро│рпН',
        appTitle: 'роЬрок рокропройрпНрокро╛роЯрпБ',
        appSubtitle: 'ро╣ро░рпЗ роХро┐ро░рпБро╖рпНрогро╛ ЁЯЩП'
      }
    },
    {
      key: 'hindi',
      flag: 'ЁЯЗоЁЯЗ│',
      name: 'Hindi',
      description: 'рд╣рд┐рдиреНрджреА',
      content: {
        chantMenuItem: 'рдЬрдк',
        prabhupadaMenuItem: 'рдЬрдк рдкрд░ рдкреНрд░рднреБрдкрд╛рдж',
        howToChantMenuItem: 'рдЬрдк рдХреИрд╕реЗ рдХрд░реЗрдВ',
        benefitsMenuItem: 'рдЬрдк рдХреЗ рдлрд╛рдпрджреЗ',
        settingsMenuItem: 'рд╕реЗрдЯрд┐рдВрдЧреНрд╕',
        quickActionsLabel: 'рддрддреНрдХрд╛рд▓ рдХреНрд░рд┐рдпрд╛рдПрдВ',
        familyLabel: 'рдкрд░рд┐рд╡рд╛рд░',
        friendsLabel: 'рдорд┐рддреНрд░',
        notesLabel: 'рдиреЛрдЯреНрд╕',
        workLabel: 'рдХрд╛рдо',
        travelLabel: 'рдпрд╛рддреНрд░рд╛',
        remindersLabel: 'рд░рд┐рдорд╛рдЗрдВрдбрд░',
        appTitle: 'рдЬрдк рдПрдкреНрдк',
        appSubtitle: 'рд╣рд░реЗ рдХреГрд╖реНрдг ЁЯЩП'
      }
    },
    {
      key: 'telugu',
      flag: 'ЁЯЗоЁЯЗ│',
      name: 'Telugu',
      description: 'р░др▒Жр░▓р▒Бр░Чр▒Б',
      content: {
        chantMenuItem: 'р░Ьр░кр░В',
        prabhupadaMenuItem: 'р░Ьр░кр░Вр░кр▒И р░кр▒Нр░░р░нр▒Бр░кр░╛р░жр▒Н',
        howToChantMenuItem: 'р░Ор░▓р░╛ р░Ьр░кр░┐р░Вр░Ър░╛р░▓р░┐',
        benefitsMenuItem: 'р░Ьр░кр░В р░пр▒Кр░Хр▒Нр░Х р░кр▒Нр░░р░пр▒Лр░Ьр░ир░╛р░▓р▒Б',
        settingsMenuItem: 'р░╕р▒Жр░Яр▒Нр░Яр░┐р░Вр░Чр▒Бр░▓р▒Б',
        quickActionsLabel: 'р░др▒Нр░╡р░░р░┐р░д р░Ър░░р▒Нр░пр░▓р▒Б',
        familyLabel: 'р░Хр▒Бр░Яр▒Бр░Вр░мр░В',
        friendsLabel: 'р░╕р▒Нр░ир▒Зр░╣р░┐р░др▒Бр░▓р▒Б',
        notesLabel: 'р░Чр░ор░ир░┐р░Хр░▓р▒Б',
        workLabel: 'р░кр░ир░┐',
        travelLabel: 'р░кр▒Нр░░р░пр░╛р░гр░В',
        remindersLabel: 'р░░р░┐р░ор▒Ир░Вр░бр░░р▒Нр░▓р▒Б',
        appTitle: 'р░Ьр░к р░пр░╛р░кр▒Н',
        appSubtitle: 'р░╣р░░р▒З р░Хр▒Гр░╖р▒Нр░г ЁЯЩП'
      }
    },
    {
      key: 'kannada',
      flag: 'ЁЯЗоЁЯЗ│',
      name: 'Kannada',
      description: 'р▓Хр▓ир│Нр▓ир▓б',
      content: {
        chantMenuItem: 'р▓Ьр▓к',
        prabhupadaMenuItem: 'р▓Ьр▓кр▓жр▓▓р│Нр▓▓р▓┐ р▓кр│Нр▓░р▓нр│Бр▓кр▓╛р▓ж',
        howToChantMenuItem: 'р▓╣р│Зр▓Чр│Ж р▓Ьр▓кр▓┐р▓╕р│Бр▓╡р│Бр▓жр│Б',
        benefitsMenuItem: 'р▓Ьр▓кр▓ж р▓кр│Нр▓░р▓пр│Лр▓Ьр▓ир▓Чр▓│р│Б',
        settingsMenuItem: 'р▓╕р│Жр▓Яр│Нр▓Яр▓┐р▓Вр▓Чр│НтАМр▓Чр▓│р│Б',
        quickActionsLabel: 'р▓др│Нр▓╡р▓░р▓┐р▓д р▓Хр│Нр▓░р▓┐р▓пр│Жр▓Чр▓│р│Б',
        familyLabel: 'р▓Хр│Бр▓Яр│Бр▓Вр▓м',
        friendsLabel: 'р▓╕р│Нр▓ир│Зр▓╣р▓┐р▓др▓░р│Б',
        notesLabel: 'р▓Яр▓┐р▓кр│Нр▓кр▓гр▓┐р▓Чр▓│р│Б',
        workLabel: 'р▓Хр│Жр▓▓р▓╕',
        travelLabel: 'р▓кр│Нр▓░р▓пр▓╛р▓г',
        remindersLabel: 'р▓Ьр│Нр▓Юр▓╛р▓кр▓ир│Жр▓Чр▓│р│Б',
        appTitle: 'р▓Ьр▓к р▓Ер▓кр│Нр▓▓р▓┐р▓Хр│Зр▓╢р▓ир│Н',
        appSubtitle: 'р▓╣р▓░р│З р▓Хр│Гр▓╖р│Нр▓г ЁЯЩП'
      }
    },
    {
      key: 'malayalam',
      flag: 'ЁЯЗоЁЯЗ│',
      name: 'Malayalam',
      description: 'р┤ор┤▓р┤пр┤╛р┤│р┤В',
      content: {
        chantMenuItem: 'р┤Ьр┤кр┤В',
        prabhupadaMenuItem: 'р┤Ьр┤кр┤др╡Нр┤др┤┐р╡╜ р┤кр╡Нр┤░р┤нр╡Бр┤кр┤╛р┤жр╡Н',
        howToChantMenuItem: 'р┤Ор┤Щр╡Нр┤Щр┤ир╡Ж р┤Ьр┤кр┤┐р┤Хр╡Нр┤Хр┤╛р┤В',
        benefitsMenuItem: 'р┤Ьр┤кр┤др╡Нр┤др┤┐р┤ир╡Нр┤▒р╡Ж р┤Чр╡Бр┤гр┤Щр╡Нр┤Щр╡╛',
        settingsMenuItem: 'р┤Хр╡Нр┤░р┤ор╡Ар┤Хр┤░р┤гр┤Щр╡Нр┤Щр╡╛',
        quickActionsLabel: 'р┤╡р╡Зр┤Чр┤др╡Нр┤др┤┐р┤▓р╡Бр┤│р╡Нр┤│ р┤кр╡Нр┤░р┤╡р╡╝р┤др╡Нр┤др┤ир┤Щр╡Нр┤Щр╡╛',
        familyLabel: 'р┤Хр╡Бр┤Яр╡Бр┤Вр┤мр┤В',
        friendsLabel: 'р┤╕р╡Бр┤╣р╡Гр┤др╡Нр┤др╡Бр┤Хр╡Нр┤Хр╡╛',
        notesLabel: 'р┤Хр╡Бр┤▒р┤┐р┤кр╡Нр┤кр╡Бр┤Хр╡╛',
        workLabel: 'р┤Ьр╡Лр┤▓р┤┐',
        travelLabel: 'р┤пр┤╛р┤др╡Нр┤░',
        remindersLabel: 'р┤Ур╡╝р┤ор╡Нр┤ор┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др┤▓р╡Бр┤Хр╡╛',
        appTitle: 'р┤Ьр┤к р┤Жр┤кр╡Нр┤кр╡Н',
        appSubtitle: 'р┤╣р┤░р╡З р┤Хр╡Гр┤╖р╡Нр┤г ЁЯЩП'
      }
    },
    {
      key: 'marathi',
      flag: 'ЁЯЗоЁЯЗ│',
      name: 'Marathi',
      description: 'рдорд░рд╛рдареА',
      content: {
        chantMenuItem: 'рдЬрдк',
        prabhupadaMenuItem: 'рдЬрдкрд╛рд╡рд░ рдкреНрд░рднреБрдкрд╛рдж',
        howToChantMenuItem: 'рдЬрдк рдХрд╕рд╛ рдХрд░рд╛рд╡рд╛',
        benefitsMenuItem: 'рдЬрдкрд╛рдЪреЗ рдлрд╛рдпрджреЗ',
        settingsMenuItem: 'рд╕реЗрдЯрд┐рдВрдЧреНрдЬ',
        quickActionsLabel: 'рддреНрд╡рд░рд┐рдд рдХреНрд░рд┐рдпрд╛',
        familyLabel: 'рдХреБрдЯреБрдВрдм',
        friendsLabel: 'рдорд┐рддреНрд░',
        notesLabel: 'рдиреЛрдЯреНрд╕',
        workLabel: 'рдХрд╛рдо',
        travelLabel: 'рдкреНрд░рд╡рд╛рд╕',
        remindersLabel: 'рд╕реНрдорд░рдгрдкрддреНрд░реЗ',
        appTitle: 'рдЬрдк рдЕтАНреЕрдк',
        appSubtitle: 'рд╣рд░реЗ рдХреГрд╖реНрдг ЁЯЩП'
      }
    },
    {
      key: 'gujarati',
      flag: 'ЁЯЗоЁЯЗ│',
      name: 'Gujarati',
      description: 'ркЧрлБркЬрк░рк╛ркдрлА',
      content: {
        chantMenuItem: 'ркЬркк',
        prabhupadaMenuItem: 'ркЬркк рккрк░ рккрлНрк░ркнрлБрккрк╛ркж',
        howToChantMenuItem: 'ркХрлЗрк╡рлА рк░рлАркдрлЗ ркЬркк ркХрк░рк╡рлБркВ',
        benefitsMenuItem: 'ркЬрккркирк╛ рклрк╛ркпркжрк╛',
        settingsMenuItem: 'рк╕рлЗркЯрк┐ркВркЧрлНрк╕',
        quickActionsLabel: 'ркЭркбрккрлА ркХрлНрк░рк┐ркпрк╛ркУ',
        familyLabel: 'ркХрлБркЯрлБркВркм',
        friendsLabel: 'ркорк┐ркдрлНрк░рлЛ',
        notesLabel: 'ркирлЛркВркзрлЛ',
        workLabel: 'ркХрк╛рко',
        travelLabel: 'рккрлНрк░рк╡рк╛рк╕',
        remindersLabel: 'рк░рлАркорк╛ркЗркирлНркбрк░',
        appTitle: 'ркЬркк ркПркк',
        appSubtitle: 'рк╣рк░рлЗ ркХрлГрк╖рлНркг ЁЯЩП'
      }
    },
    {
      key: 'bengali',
      flag: 'ЁЯЗоЁЯЗ│',
      name: 'Bengali',
      description: 'ржмрж╛ржВрж▓рж╛',
      content: {
        chantMenuItem: 'ржЬржк',
        prabhupadaMenuItem: 'ржЬржкрзЗ ржкрзНрж░ржнрзБржкрж╛ржж',
        howToChantMenuItem: 'ржХрзАржнрж╛ржмрзЗ ржЬржк ржХрж░ржмрзЗржи',
        benefitsMenuItem: 'ржЬржкрзЗрж░ ржЙржкржХрж╛рж░рж┐рждрж╛',
        settingsMenuItem: 'рж╕рзЗржЯрж┐ржВрж╕',
        quickActionsLabel: 'ржжрзНрж░рзБржд ржХрзНрж░рж┐ржпрж╝рж╛',
        familyLabel: 'ржкрж░рж┐ржмрж╛рж░',
        friendsLabel: 'ржмржирзНржзрзБрж░рж╛',
        notesLabel: 'ржирзЛржЯ',
        workLabel: 'ржХрж╛ржЬ',
        travelLabel: 'ржнрзНрж░ржоржг',
        remindersLabel: 'ржЕржирзБрж╕рзНржорж╛рж░ржХ',
        appTitle: 'ржЬржк ржЕрзНржпрж╛ржк',
        appSubtitle: 'рж╣рж░рзЗ ржХрзГрж╖рзНржг ЁЯЩП'
      }
    },
    {
      key: 'punjabi',
      flag: 'ЁЯЗоЁЯЗ│',
      name: 'Punjabi',
      description: 'рикрй░риЬри╛римрйА',
      content: {
        chantMenuItem: 'риЬрик',
        prabhupadaMenuItem: 'риЬрик риЙрй▒ридрйЗ рикрйНри░ринрйБрикри╛риж',
        howToChantMenuItem: 'риЬрик риХри┐ри╡рйЗриВ риХри░рйАриП',
        benefitsMenuItem: 'риЬрик рижрйЗ рилри╛риЗрижрйЗ',
        settingsMenuItem: 'ри╕рйИриЯри┐рй░риЧри╛риВ',
        quickActionsLabel: 'ридрйЗриЬри╝ риХри┐ри░ри┐риЖри╡ри╛риВ',
        familyLabel: 'рикри░ри┐ри╡ри╛ри░',
        friendsLabel: 'рижрйЛри╕рид',
        notesLabel: 'риирйЛриЯри╕',
        workLabel: 'риХрй░рио',
        travelLabel: 'рипри╛ридри░ри╛',
        remindersLabel: 'рипри╛рижрижри┐ри╣ри╛риирйАриЖриВ',
        appTitle: 'риЬрик риРрик',
        appSubtitle: 'ри╣ри░рйЗ риХрйНри░ри┐ри╕ри╝риири╛ ЁЯЩП'
      }
    },
    {
      key: 'urdu',
      flag: 'ЁЯЗ╡ЁЯЗ░',
      name: 'Urdu',
      description: '╪з╪▒╪п┘И',
      content: {
        chantMenuItem: '╪м╪з┘╛',
        prabhupadaMenuItem: '╪м╪з┘╛ ┘╛╪▒ ┘╛╪▒╪з╪и┌╛┘И┘╛╪з╪п',
        howToChantMenuItem: '╪м╪з┘╛ ┌й█М╪│█Т ┌й╪▒█М┌║',
        benefitsMenuItem: '╪м╪з┘╛ ┌й█Т ┘Б┘И╪з╪ж╪п',
        settingsMenuItem: '╪│█М┘╣┘Ж┌п╪▓',
        quickActionsLabel: '┘Б┘И╪▒█М ╪з╪╣┘Е╪з┘Д',
        familyLabel: '╪о╪з┘Ж╪п╪з┘Ж',
        friendsLabel: '╪п┘И╪│╪к',
        notesLabel: '┘Ж┘И┘╣╪│',
        workLabel: '┌й╪з┘Е',
        travelLabel: '╪│┘Б╪▒',
        remindersLabel: '█М╪з╪п ╪п█Б╪з┘Ж█М╪з┌║',
        appTitle: '╪м╪з┘╛ ╪з█М┘╛',
        appSubtitle: '█Б╪▒█Т ┌й╪▒╪┤┘Ж╪з ЁЯЩП'
      }
    }
  ];

  constructor() {
    // Load saved language preference
    const savedLanguage = localStorage.getItem('selectedLanguage') as LanguageType;
    if (savedLanguage && this.isValidLanguage(savedLanguage)) {
      this.currentLanguageSubject.next(savedLanguage);
    }
  }

  // Get all available language options
  get languageOptions(): LanguageOption[] {
    return this.languageData.map(lang => ({
      key: lang.key,
      flag: lang.flag,
      name: lang.name,
      description: lang.description
    }));
  }

  // Get current language
  get currentLanguage(): LanguageType {
    return this.currentLanguageSubject.value;
  }

  // Get current content based on selected language
  get currentContent(): AppContent {
    const currentLang = this.languageData.find(lang => lang.key === this.currentLanguage);
    return currentLang ? currentLang.content : this.languageData[0].content;
  }

  // Set language
  setLanguage(language: LanguageType): void {
    if (this.isValidLanguage(language)) {
      this.currentLanguageSubject.next(language);
      localStorage.setItem('selectedLanguage', language);
    }
  }

  // Check if language is valid
  private isValidLanguage(language: string): language is LanguageType {
    return this.languageData.some(lang => lang.key === language);
  }

  // Get language data by key
  getLanguageData(language: LanguageType): LanguageData | undefined {
    return this.languageData.find(lang => lang.key === language);
  }
}
